{"type":"root","children":[{"type":"yaml","value":"title: ü§è Picking\r\nsidebar_position: 1","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4,"column":4,"offset":48}}},{"type":"mdxjsEsm","value":"import { IfcAlert } from \"../../../../src/components/Alert/Alert\";\r\nimport { Scene } from \"../../../../src/components/Scene/Scene\";","position":{"start":{"line":6,"column":1,"offset":52},"end":{"line":7,"column":64,"offset":183}},"data":{"estree":{"type":"Program","start":52,"end":183,"body":[{"type":"ImportDeclaration","start":52,"end":118,"specifiers":[{"type":"ImportSpecifier","start":61,"end":69,"imported":{"type":"Identifier","start":113,"end":121,"name":"IfcAlert","loc":{"start":{"line":6,"column":61,"offset":113},"end":{"line":7,"column":1,"offset":121}},"range":[113,121]},"local":{"type":"Identifier","start":113,"end":121,"name":"IfcAlert","loc":{"start":{"line":6,"column":61,"offset":113},"end":{"line":7,"column":1,"offset":121}},"range":[113,121]},"loc":{"start":{"line":6,"column":9,"offset":61},"end":{"line":6,"column":17,"offset":69}},"range":[61,69]}],"source":{"type":"Literal","start":77,"end":117,"value":"../../../../src/components/Alert/Alert","raw":"\"../../../../src/components/Alert/Alert\"","loc":{"start":{"line":6,"column":25,"offset":77},"end":{"line":6,"column":65,"offset":117}},"range":[77,117]},"loc":{"start":{"line":6,"column":0,"offset":52},"end":{"line":6,"column":66,"offset":118}},"range":[52,118]},{"type":"ImportDeclaration","start":120,"end":183,"specifiers":[{"type":"ImportSpecifier","start":129,"end":134,"imported":{"type":"Identifier","start":181,"end":183,"name":"Scene","loc":{"start":{"line":7,"column":61,"offset":181},"end":{"line":7,"column":63,"offset":183}},"range":[181,183]},"local":{"type":"Identifier","start":181,"end":183,"name":"Scene","loc":{"start":{"line":7,"column":61,"offset":181},"end":{"line":7,"column":63,"offset":183}},"range":[181,183]},"loc":{"start":{"line":7,"column":9,"offset":129},"end":{"line":7,"column":14,"offset":134}},"range":[129,134]}],"source":{"type":"Literal","start":142,"end":182,"value":"../../../../src/components/Scene/Scene","raw":"\"../../../../src/components/Scene/Scene\"","loc":{"start":{"line":7,"column":22,"offset":142},"end":{"line":7,"column":62,"offset":182}},"range":[142,182]},"loc":{"start":{"line":7,"column":0,"offset":120},"end":{"line":7,"column":63,"offset":183}},"range":[120,183]}],"sourceType":"module","comments":[],"loc":{"start":{"line":6,"column":0,"offset":52},"end":{"line":7,"column":63,"offset":183}},"range":[52,183]}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Introduction","position":{"start":{"line":9,"column":4,"offset":190},"end":{"line":9,"column":16,"offset":202}}}],"position":{"start":{"line":9,"column":1,"offset":187},"end":{"line":9,"column":16,"offset":202}}},{"type":"paragraph","children":[{"type":"text","value":"üö∂‚Äç‚ôÄÔ∏è\r\nSo far we have only loaded IFC models into the scene. That's already great, but it would be even better to be able to interact with that model, and that's precisely what we're going to do.","position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":12,"column":189,"offset":401}}}],"position":{"start":{"line":11,"column":1,"offset":206},"end":{"line":12,"column":189,"offset":401}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Import Three.js dependencies","position":{"start":{"line":14,"column":5,"offset":409},"end":{"line":14,"column":33,"offset":437}}}],"position":{"start":{"line":14,"column":1,"offset":405},"end":{"line":14,"column":33,"offset":437}}},{"type":"paragraph","children":[{"type":"text","value":"‚ö°‚ö°‚ö°\r\nBefore you can do things with objects, you need to be able to select them. This can be easily achieved with the ","position":{"start":{"line":16,"column":1,"offset":441},"end":{"line":17,"column":113,"offset":558}}},{"type":"link","title":null,"url":"https://threejs.org/docs/#api/en/core/Raycaster","children":[{"type":"text","value":"Three.js Raycaster","position":{"start":{"line":17,"column":114,"offset":559},"end":{"line":17,"column":132,"offset":577}}}],"position":{"start":{"line":17,"column":113,"offset":558},"end":{"line":17,"column":182,"offset":627}}},{"type":"text","value":", which can be imported from ","position":{"start":{"line":17,"column":182,"offset":627},"end":{"line":17,"column":211,"offset":656}}},{"type":"inlineCode","value":"three","position":{"start":{"line":17,"column":211,"offset":656},"end":{"line":17,"column":218,"offset":663}}},{"type":"text","value":"'s core library. In addition, we will import a ","position":{"start":{"line":17,"column":218,"offset":663},"end":{"line":17,"column":265,"offset":710}}},{"type":"link","title":null,"url":"https://threejs.org/docs/#api/en/math/Vector2","children":[{"type":"text","value":"Vector2","position":{"start":{"line":17,"column":266,"offset":711},"end":{"line":17,"column":273,"offset":718}}}],"position":{"start":{"line":17,"column":265,"offset":710},"end":{"line":17,"column":321,"offset":766}}},{"type":"text","value":" object to store the mouse position in the scene.","position":{"start":{"line":17,"column":321,"offset":766},"end":{"line":17,"column":370,"offset":815}}}],"position":{"start":{"line":16,"column":1,"offset":441},"end":{"line":17,"column":370,"offset":815}}},{"type":"code","lang":"js","meta":null,"value":"import { Raycaster, Vector2 } from \"three\";","position":{"start":{"line":19,"column":1,"offset":819},"end":{"line":21,"column":4,"offset":874}}},{"type":"mdxJsxFlowElement","name":"IfcAlert","attributes":[],"children":[{"type":"paragraph","children":[{"type":"text","value":"The Raycaster allows you to shoot \"beams\" that hit objects in the scene and\r\nreturn their information.","position":{"start":{"line":24,"column":3,"offset":892},"end":{"line":25,"column":28,"offset":996}}}],"position":{"start":{"line":24,"column":3,"offset":892},"end":{"line":25,"column":28,"offset":996}}}],"position":{"start":{"line":23,"column":1,"offset":878},"end":{"line":26,"column":12,"offset":1009}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Import three-mesh-bvh (optional)","position":{"start":{"line":28,"column":5,"offset":1017},"end":{"line":28,"column":37,"offset":1049}}}],"position":{"start":{"line":28,"column":1,"offset":1013},"end":{"line":28,"column":37,"offset":1049}}},{"type":"paragraph","children":[{"type":"text","value":"üë©‚ÄçüöÄüöÄ\r\nIn addition, we will import the ","position":{"start":{"line":30,"column":1,"offset":1053},"end":{"line":31,"column":33,"offset":1094}}},{"type":"link","title":null,"url":"https://github.com/gkjohnson/three-mesh-bvh","children":[{"type":"text","value":"three-mesh-bvh library","position":{"start":{"line":31,"column":34,"offset":1095},"end":{"line":31,"column":56,"offset":1117}}}],"position":{"start":{"line":31,"column":33,"offset":1094},"end":{"line":31,"column":102,"offset":1163}}},{"type":"text","value":" to make the selection of objects much more optimal. This can be installed with ","position":{"start":{"line":31,"column":102,"offset":1163},"end":{"line":31,"column":182,"offset":1243}}},{"type":"inlineCode","value":"npm i three-mesh-bvh","position":{"start":{"line":31,"column":182,"offset":1243},"end":{"line":31,"column":204,"offset":1265}}},{"type":"text","value":". Don't worry, you don't have to learn how to use that library. Just give us these library objects and IFC.js will take care of the rest.","position":{"start":{"line":31,"column":204,"offset":1265},"end":{"line":31,"column":341,"offset":1402}}}],"position":{"start":{"line":30,"column":1,"offset":1053},"end":{"line":31,"column":341,"offset":1402}}},{"type":"code","lang":"js","meta":null,"value":"import {\r\n  acceleratedRaycast,\r\n  computeBoundsTree,\r\n  disposeBoundsTree,\r\n} from \"three-mesh-bvh\";\r\n\r\n// Sets up optimized picking\r\nifcLoader.ifcManager.setupThreeMeshBVH(\r\n  computeBoundsTree,\r\n  disposeBoundsTree,\r\n  acceleratedRaycast\r\n);","position":{"start":{"line":33,"column":1,"offset":1406},"end":{"line":46,"column":4,"offset":1662}}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Store reference of IFC models","position":{"start":{"line":48,"column":5,"offset":1670},"end":{"line":48,"column":34,"offset":1699}}}],"position":{"start":{"line":48,"column":1,"offset":1666},"end":{"line":48,"column":34,"offset":1699}}},{"type":"paragraph","children":[{"type":"text","value":"üè†üè†üè†\r\nBefore doing anything else, it is necessary to save a reference to the IFC models in the scene in order to select them. To do this, we just need to create an array where we store the models we load:","position":{"start":{"line":50,"column":1,"offset":1703},"end":{"line":51,"column":199,"offset":1909}}}],"position":{"start":{"line":50,"column":1,"offset":1703},"end":{"line":51,"column":199,"offset":1909}}},{"type":"code","lang":"js","meta":"{2,6}","value":"//Sets up the IFC loading\r\nconst ifcModels = [];\r\nconst ifcLoader = new IFCLoader();\r\n\r\nasync function loadIFC() {\r\n  await ifcLoader.ifcManager.setWasmPath(\"../../\");\r\n  ifcLoader.load(\"../../IFC/01.ifc\", (ifcModel) => {\r\n    ifcModels.push(ifcModel);\r\n    scene.add(ifcModel);\r\n  });\r\n}\r\n\r\nloadIFC();","position":{"start":{"line":53,"column":1,"offset":1913},"end":{"line":67,"column":4,"offset":2233}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to do it","position":{"start":{"line":69,"column":4,"offset":2240},"end":{"line":69,"column":16,"offset":2252}}}],"position":{"start":{"line":69,"column":1,"offset":2237},"end":{"line":69,"column":16,"offset":2252}}},{"type":"paragraph","children":[{"type":"text","value":"üêÅ\r\nNext we will create an instance of the Raycaster and the mouse position vector. To optimise the application, the Raycaster will only retrieve information from the first object it encounters.","position":{"start":{"line":71,"column":1,"offset":2256},"end":{"line":72,"column":191,"offset":2450}}}],"position":{"start":{"line":71,"column":1,"offset":2256},"end":{"line":72,"column":191,"offset":2450}}},{"type":"code","lang":"js","meta":null,"value":"const raycaster = new Raycaster();\r\nraycaster.firstHitOnly = true;\r\nconst mouse = new Vector2();","position":{"start":{"line":74,"column":1,"offset":2454},"end":{"line":78,"column":4,"offset":2562}}},{"type":"paragraph","children":[{"type":"text","value":"Now we need a function for the Raycaster to cast rays, calculating the position of the mouse on the screen. Note that:","position":{"start":{"line":80,"column":1,"offset":2566},"end":{"line":80,"column":119,"offset":2684}}}],"position":{"start":{"line":80,"column":1,"offset":2566},"end":{"line":80,"column":119,"offset":2684}}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The threeCanvas object is the HTML ","position":{"start":{"line":82,"column":3,"offset":2690},"end":{"line":82,"column":38,"offset":2725}}},{"type":"inlineCode","value":"<canvas>","position":{"start":{"line":82,"column":38,"offset":2725},"end":{"line":82,"column":48,"offset":2735}}},{"type":"text","value":" element where the Three.js scene is being rendered. A reference to it can be retrieved with ","position":{"start":{"line":82,"column":48,"offset":2735},"end":{"line":82,"column":141,"offset":2828}}},{"type":"inlineCode","value":"getElementByID()","position":{"start":{"line":82,"column":141,"offset":2828},"end":{"line":82,"column":159,"offset":2846}}},{"type":"text","value":".","position":{"start":{"line":82,"column":159,"offset":2846},"end":{"line":82,"column":160,"offset":2847}}}],"position":{"start":{"line":82,"column":3,"offset":2690},"end":{"line":82,"column":160,"offset":2847}}}],"position":{"start":{"line":82,"column":1,"offset":2688},"end":{"line":82,"column":160,"offset":2847}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It is necessary to specify which objects the beam collides with. In this case, it will only collide with the loaded IFC models, i.e. if there are more objects in the scene, it will ignore them.","position":{"start":{"line":84,"column":3,"offset":2853},"end":{"line":84,"column":196,"offset":3046}}}],"position":{"start":{"line":84,"column":3,"offset":2853},"end":{"line":84,"column":196,"offset":3046}}}],"position":{"start":{"line":84,"column":1,"offset":2851},"end":{"line":84,"column":196,"offset":3046}}}],"position":{"start":{"line":82,"column":1,"offset":2688},"end":{"line":84,"column":196,"offset":3046}}},{"type":"code","lang":"js","meta":null,"value":"function cast(event) {\r\n  // Computes the position of the mouse on the screen\r\n  const bounds = threeCanvas.getBoundingClientRect();\r\n\r\n  const x1 = event.clientX - bounds.left;\r\n  const x2 = bounds.right - bounds.left;\r\n  mouse.x = (x1 / x2) * 2 - 1;\r\n\r\n  const y1 = event.clientY - bounds.top;\r\n  const y2 = bounds.bottom - bounds.top;\r\n  mouse.y = -(y1 / y2) * 2 + 1;\r\n\r\n  // Places it on the camera pointing to the mouse\r\n  raycaster.setFromCamera(mouse, camera);\r\n\r\n  // Casts a ray\r\n  return raycaster.intersectObjects(ifcModels);\r\n}","position":{"start":{"line":86,"column":1,"offset":3050},"end":{"line":105,"column":4,"offset":3601}}},{"type":"paragraph","children":[{"type":"text","value":"üëì\r\nWe have a function that fires a ray and returns the object it collides with, but we are not doing anything with that object. Let's create a second function that gets the index of the face the ray hit and logs in the console the Express ID of the object it belongs to.","position":{"start":{"line":107,"column":1,"offset":3605},"end":{"line":108,"column":268,"offset":3876}}}],"position":{"start":{"line":107,"column":1,"offset":3605},"end":{"line":108,"column":268,"offset":3876}}},{"type":"code","lang":"js","meta":null,"value":"function pick(event) {\r\n  const found = cast(event)[0];\r\n  if (found) {\r\n    const index = found.faceIndex;\r\n    const geometry = found.object.geometry;\r\n    const ifc = ifcLoader.ifcManager;\r\n    const id = ifc.getExpressId(geometry, index);\r\n    console.log(id);\r\n  }\r\n}","position":{"start":{"line":110,"column":1,"offset":3880},"end":{"line":121,"column":4,"offset":4164}}},{"type":"mdxJsxFlowElement","name":"IfcAlert","attributes":[],"children":[{"type":"paragraph","children":[{"type":"text","value":"The Raycaster always returns an array of objects, even if","position":{"start":{"line":124,"column":3,"offset":4182},"end":{"line":124,"column":60,"offset":4239}}},{"type":"mdxTextExpression","value":"\" \"","position":{"start":{"line":124,"column":60,"offset":4239},"end":{"line":124,"column":65,"offset":4244}},"data":{"estree":{"type":"Program","start":4240,"end":4243,"body":[{"type":"ExpressionStatement","expression":{"type":"Literal","start":4240,"end":4243,"value":" ","raw":"\" \"","loc":{"start":{"line":124,"column":60,"offset":4240},"end":{"line":124,"column":63,"offset":4243}},"range":[4240,4243]},"start":4240,"end":4243,"loc":{"start":{"line":124,"column":60,"offset":4240},"end":{"line":124,"column":63,"offset":4243}},"range":[4240,4243]}],"sourceType":"module","comments":[],"loc":{"start":{"line":124,"column":60,"offset":4240},"end":{"line":124,"column":63,"offset":4243}},"range":[4240,4243]}}},{"type":"text","value":"\r\n","position":{"start":{"line":124,"column":65,"offset":4244},"end":{"line":125,"column":1,"offset":4246}}},{"type":"mdxJsxTextElement","name":"i","attributes":[],"children":[{"type":"text","value":"raycaster.firstHitOnly = true;","position":{"start":{"line":125,"column":6,"offset":4251},"end":{"line":125,"column":36,"offset":4281}}}],"position":{"start":{"line":125,"column":3,"offset":4248},"end":{"line":125,"column":40,"offset":4285}}},{"type":"text","value":". In this case, the array will only\r\ncontain one object that can be extracted with ","position":{"start":{"line":125,"column":40,"offset":4285},"end":{"line":126,"column":49,"offset":4370}}},{"type":"mdxJsxTextElement","name":"i","attributes":[],"children":[{"type":"text","value":"[0]","position":{"start":{"line":126,"column":52,"offset":4373},"end":{"line":126,"column":55,"offset":4376}}}],"position":{"start":{"line":126,"column":49,"offset":4370},"end":{"line":126,"column":59,"offset":4380}}},{"type":"text","value":".","position":{"start":{"line":126,"column":59,"offset":4380},"end":{"line":126,"column":60,"offset":4381}}}],"position":{"start":{"line":124,"column":3,"offset":4182},"end":{"line":126,"column":60,"offset":4381}}}],"position":{"start":{"line":123,"column":1,"offset":4168},"end":{"line":127,"column":12,"offset":4394}}},{"type":"paragraph","children":[{"type":"text","value":"Finally, all that remains is to associate that function with an event (in this case it's a double click).","position":{"start":{"line":129,"column":1,"offset":4398},"end":{"line":129,"column":106,"offset":4503}}}],"position":{"start":{"line":129,"column":1,"offset":4398},"end":{"line":129,"column":106,"offset":4503}}},{"type":"code","lang":"js","meta":null,"value":"threeCanvas.ondblclick = pick;","position":{"start":{"line":131,"column":1,"offset":4507},"end":{"line":133,"column":4,"offset":4549}}},{"type":"paragraph","children":[{"type":"text","value":"If you have done everything right and double click on an item, you will see its Express ID in the console (you can access the console by pressing F12 or by inspecting the page).","position":{"start":{"line":135,"column":1,"offset":4553},"end":{"line":135,"column":178,"offset":4730}}}],"position":{"start":{"line":135,"column":1,"offset":4553},"end":{"line":135,"column":178,"offset":4730}}},{"type":"mdxJsxFlowElement","name":"Scene","attributes":[{"type":"mdxJsxAttribute","name":"link","value":{"type":"mdxJsxAttributeValueExpression","value":"\"https://ifcjs.github.io/hello-world/examples/web-ifc-three/picking/\"","data":{"estree":{"type":"Program","start":4750,"end":4819,"body":[{"type":"ExpressionStatement","expression":{"type":"Literal","start":4750,"end":4819,"loc":{"start":{"line":138,"column":8,"offset":4750},"end":{"line":138,"column":77,"offset":4819}},"value":"https://ifcjs.github.io/hello-world/examples/web-ifc-three/picking/","raw":"\"https://ifcjs.github.io/hello-world/examples/web-ifc-three/picking/\"","range":[4750,4819]},"start":4750,"end":4819,"loc":{"start":{"line":138,"column":8,"offset":4750},"end":{"line":138,"column":77,"offset":4819}},"range":[4750,4819]}],"sourceType":"module","comments":[],"loc":{"start":{"line":138,"column":8,"offset":4750},"end":{"line":138,"column":77,"offset":4819}},"range":[4750,4819]}}}}],"children":[],"position":{"start":{"line":137,"column":1,"offset":4734},"end":{"line":139,"column":3,"offset":4824}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Next steps","position":{"start":{"line":141,"column":4,"offset":4831},"end":{"line":141,"column":14,"offset":4841}}}],"position":{"start":{"line":141,"column":1,"offset":4828},"end":{"line":141,"column":14,"offset":4841}}},{"type":"paragraph","children":[{"type":"text","value":"üéâüéâüéâ\r\nCongratulations! You now know how to get the ID of an object by clicking on it. Now we can do many things using that ID.","position":{"start":{"line":143,"column":1,"offset":4845},"end":{"line":144,"column":121,"offset":4973}}}],"position":{"start":{"line":143,"column":1,"offset":4845},"end":{"line":144,"column":121,"offset":4973}}},{"type":"paragraph","children":[{"type":"text","value":"‚ú®\r\nHowever, it would be nice if the user could see graphically that the object has been selected. For that, let's go to the next point, where we will learn how to highlight elements.","position":{"start":{"line":146,"column":1,"offset":4977},"end":{"line":147,"column":180,"offset":5159}}}],"position":{"start":{"line":146,"column":1,"offset":4977},"end":{"line":147,"column":180,"offset":5159}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":148,"column":1,"offset":5161}}}